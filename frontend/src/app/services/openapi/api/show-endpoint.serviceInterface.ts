/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { PageShowListResponse } from '../model/models';
import { PageShowResponse } from '../model/models';
import { ShowCreationDto } from '../model/models';
import { ShowHallplanResponse } from '../model/models';
import { ShowListDto } from '../model/models';
import { ShowResponse } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ShowEndpointServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param showCreationDto 
     */
    createShow(showCreationDto: ShowCreationDto, extraHttpRequestParams?: any): Observable<string>;

    /**
     * 
     * 
     * @param id 
     */
    getAvailableSeatsByShowId(id: number, extraHttpRequestParams?: any): Observable<ShowHallplanResponse>;

    /**
     * 
     * 
     * @param id 
     */
    getShowById(id: number, extraHttpRequestParams?: any): Observable<ShowResponse>;

    /**
     * 
     * 
     * @param locationId 
     * @param onlyFutureShows 
     * @param page 
     * @param size 
     */
    getShowByLocation(locationId: number, onlyFutureShows?: boolean, page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageShowResponse>;

    /**
     * 
     * 
     * @param artistId 
     * @param onlyFutureShows 
     * @param page 
     * @param size 
     */
    getShowsByArtistId(artistId: number, onlyFutureShows?: boolean, page?: number, size?: number, extraHttpRequestParams?: any): Observable<PageShowResponse>;

    /**
     * 
     * 
     * @param eventid 
     */
    getShowsByEventId(eventid: number, extraHttpRequestParams?: any): Observable<Array<ShowListDto>>;

    /**
     * 
     * 
     * @param price 
     * @param dateTime 
     * @param location 
     * @param page 
     * @param size 
     * @param sort 
     */
    searchShows(price?: number, dateTime?: string, location?: number, page?: number, size?: number, sort?: string, extraHttpRequestParams?: any): Observable<PageShowListResponse>;

}
